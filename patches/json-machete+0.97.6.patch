diff --git a/node_modules/json-machete/esm/healJSONSchema.js b/node_modules/json-machete/esm/healJSONSchema.js
index 8c04246..b6effd7 100644
--- a/node_modules/json-machete/esm/healJSONSchema.js
+++ b/node_modules/json-machete/esm/healJSONSchema.js
@@ -36,12 +36,32 @@ export const AnySchema = {
         { type: 'object', additionalProperties: true },
     ],
 };
+
+// Remove the unused properties of each scalar to create shorter and more readable property names.
+function removeUnnecessaryProperties(obj, seen = []) {
+  if (seen.includes(obj)) {
+    return;
+  }
+  seen.push(obj);
+  delete obj.pattern;
+  delete obj.maxLength;
+  delete obj.minLength;
+  delete obj.maxItems;
+  delete obj.minimum;
+  for (let key in obj) {
+    if (typeof obj[key] === 'object' && obj[key] !== null) {
+      removeUnnecessaryProperties(obj[key], seen);
+    }
+  }
+}
+
 export async function healJSONSchema(schema, debugLogFn) {
     const schemaByTitle = new Map();
     const anySchemaOneOfInspect = inspect(AnySchema.oneOf);
     return visitJSONSchema(schema, {
-        enter: async function healSubschema(subSchema, { path }) {
+      enter: async function healSubschema(subSchema, { path }) {
             if (typeof subSchema === 'object') {
+                removeUnnecessaryProperties(subSchema);
                 if (subSchema.title === 'Any' ||
                     (subSchema.oneOf && inspect(subSchema.oneOf) === anySchemaOneOfInspect)) {
                     return AnySchema;
@@ -362,8 +382,9 @@ export async function healJSONSchema(schema, debugLogFn) {
                                 subSchema.maxLength ||
                                 subSchema.minLength ||
                                 subSchema.enum) {
-                                debugLogFn?.(`${path} has a pattern or maxLength or minLength or enum but no title. Setting it to ${pathBasedName}`);
-                                subSchema.title = pathBasedName;
+                                const newEnumName = `ENUM_${maybeDefinitionBasedPath.split('/')[maybeDefinitionBasedPath.split('/').length-1]}`;
+                                debugLogFn?.(`${path} has a enum but no title. Setting it to ${newEnumName}`);
+                                subSchema.title = newEnumName;                                  
                                 // Otherwise use the format name
                             }
                             break;
